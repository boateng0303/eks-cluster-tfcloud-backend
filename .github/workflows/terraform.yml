name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Select environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_API_TOKEN: ${{ secrets.TFC_TOKEN }}

    steps:
      # 1Ô∏è‚É£ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # 3Ô∏è‚É£ Install TFSEC & Checkov
      - name: Install tfsec
        run: |
              TFSEC_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest \
                    | grep tag_name | cut -d '"' -f 4)
              curl -L "https://github.com/aquasecurity/tfsec/releases/download/$TFSEC_VERSION/tfsec-linux-amd64" \
                   -o /usr/local/bin/tfsec
              chmod +x /usr/local/bin/tfsec

              # Install Checkov
              python3 -m pip install --upgrade pip
              pip install checkov
          
          

      # 4Ô∏è‚É£ Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "Selected environment: ${{ github.event.inputs.env }}"
          ENV_FILE="${{ github.event.inputs.env }}.tfvars"
          echo "ENV_FILE=$ENV_FILE" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Terraform Lint (terraform fmt & validate)
      - name: Terraform Lint
        run: |
          terraform fmt -check
          terraform validate

      # 6Ô∏è‚É£ Security Scanning with tfsec
      - name: Terraform Security Scan (tfsec)
        run: tfsec . || true

      # 7Ô∏è‚É£ Security Scanning with Checkov
      - name: Terraform Security Scan (Checkov)
        run: checkov -d . || true

      # 8Ô∏è‚É£ Initialize Terraform
      - name: Terraform Init
        working-directory: terraform
        run: terraform init 

    
      # üîü Terraform Plan (Uploads to TFC)
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file="$ENV_FILE" -out=tfplan

      # 1Ô∏è‚É£1Ô∏è‚É£ Show Plan in JSON (Optional)
      - name: Show Plan JSON
        run: terraform show -json tfplan > tfplan.json

      # 1Ô∏è‚É£2Ô∏è‚É£ Comment Plan in Pull Request (Optional)
      - name: Comment Plan in PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: tfplan.json
